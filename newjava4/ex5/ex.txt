问题一：
利用多态编程，创建一个图形(Shape)类,实现求正方形(Square),三角形(Triangle),圆(Circle)的面积,。
要求：图形(Shape)类为共享父类，再重新定义各形状的求面积函数，使用同一个方法可以实现对不同的图形进行面积的求解！！

问题二：
利用多态编程，创建一个父类(Person)类,其中包含的成员变量为：身高和体重，包含一个方法为向大家打招呼, Person有三个子类分别为中国人，美国人，日本人，
要求实现：通过完一个公用的方法实现，中国人向大家打招呼时说的是汉语“你好”,日本人说的是日语，美国人说的是英语，以及计算不同国家的人的身材标准。如：中国人的标准身材是（身高-100）*2是标准体重， 日本人是（身高-110）*1.8是标准身材，美国人是（身高-90）*2.1是标准的，然后用同一个身高和体重，分别构建3种人，然后算是他们是不是标准体重，如果不是，那么是偏胖还是偏瘦！
问题三：
利用多态编程，创建一个员工(staff)类，其中包含字段成员变量固定工资 字段和出勤天数字段，staff类，分别有二种子类，项目经理和普通员工
要土实现：项目经理和普通员工，均缺勤8天，那么分别得到的工资 是多少
项目经理总工资为20000，普通员工月工资 为8000.
公式：员工的每天工资=总工资 /21.75天

问题四：
编写一个Java应用程序，该程序包括3个类：Monkey类、People类和主类E。要求：
(1) Monkey类中有个构造方法：Monkey (String name)，并且有个public void speak()方法，在speak方法中输出“咿咿呀呀......”的信息。
(2)People类是Monkey类的子类，在People类中重写方法speak(),在speak方法中输出“小样的，不错嘛！会说话了！”的信息。
(3)在People类中新增方法void think()，在think方法中输出“别说话！认真思考！”的信息。
(4)在主类E的main方法中创建Monkey与People类的对象类测试这2个类的功能。


问题五：定义类Human，具有若干属性和功能；定义其子类Man、Woman；在主类Test中分别创建子类、父类和上转型对象，并测试其特性。

问题六：编写一个Animal类，具有属性：种类；具有功能：吃、睡。定义其子类Fish和Dog，定义主类E，在其main方法中分别创建其对象并测试对象的特性。 

问题七：
按要求编写一个Java应用程序：
（1）定义一个类，描述一个矩形，包含有长、宽两种属性，和计算面积方法。
（2）编写一个类，继承自矩形类，同时该类描述长方体，具有长、宽、高属性，和计算体积的方法。
（3）编写一个测试类，对以上两个类进行测试，创建一个长方体，定义其长、宽、高，输出其底面积和体积。

问题八：
编写一个Java应用程序，设计一个汽车类Vehicle，包含的属性有车轮个数wheels和车重weight。小车类Car是Vehicle的子类，其中包含的属性有载人数loader。卡车类Truck是Car类的子类，其中包含的属性有载重量payload。每个类都有构造方法和输出相关数据的方法。最后，写一个测试类来测试这些类的功能。



问题一：
 * 雇员示例：  * 需求：公司中程序员有姓名、工号、薪水、工作内容。  * 项目经理除了有姓名、工号、薪水、还有奖金、工作内容。  * 对给出需求进行数据建模。  *   * 分析：  * 在这个问题领域中，先找出设计的对象。  * 通过提炼法。  * 程序员：  * 属性：姓名、工号、薪水  * 行为：工作  * 经理：  * 属性：姓名、工号、薪水、奖金。  * 行为：工作  *   * 程序员和经理不存在着直接继承关系，但是程序员和经理却具有共性内容。可以进行抽取。因为他们都是公司的雇员可以将程序员和经理进行抽取，建立体系。

问题二：
设计一个商品类 字段：
商品名称,重量,价格,配件数量,配件制造厂商(是数组,因为可能有多个制造厂商)
要求: 有构造函数
重写 toString 方法
重写 equals方法,进行两件商品的比较

问题三：
猫狗案例         具体事物：猫，狗         共性：姓名，年龄，吃饭      分析：从具体到抽象         猫:             成员变量：姓名，年龄             构造方法：无参，带参             成员方法：吃饭(猫吃鱼)                      狗:             成员变量：姓名，年龄             构造方法：无参，带参             成员方法：吃饭(狗吃肉)                      因为有共性的内容，所以就提取了一个父类。动物。         但是又由于吃饭的内容不一样，所以吃饭的方法是抽象的，         而方法是抽象的类，类就必须定义为抽象类。                  抽象动物类：             成员变量：姓名，年龄             构造方法：无参，带参             成员方法：吃饭();          实现：从抽象到具体         动物类:             成员变量：姓名，年龄             构造方法：无参，带参             成员方法：吃饭();                      狗类：             继承自动物类             重写吃饭();                      猫类：             继承自动物类             重写吃饭();
测试：
    //测试狗类         //具体类用法         //方式1：         Dog d = new Dog();         d.setName("旺财");         d.setAge(3);         System.out.println(d.getName()+"---"+d.getAge());         d.eat();         //方式2：         Dog d2 = new Dog("旺财",3);         System.out.println(d2.getName()+"---"+d2.getAge());         d2.eat();         System.out.println("---------------------------");                  Animal a = new Dog();         a.setName("旺财");         a.setAge(3);         System.out.println(a.getName()+"---"+a.getAge());         a.eat();                  Animal a2 = new Dog("旺财",3);         System.out.println(a2.getName()+"---"+a2.getAge());         a2.eat();

问题四：
    老师案例         具体事物：基础班老师，就业班老师         共性：姓名，年龄，讲课。      分析：             基础班老师             姓名，年龄             讲课。         就业班老师             姓名，年龄             讲课。     实现：         老师类             基础班老师             就业班老师
   Teacher t = new BasicTeacher();         t.setName("刘意");         t.setAge(30);         System.out.println(t.getName()+"---"+t.getAge());         t.teach();         System.out.println("--------------");                  t = new BasicTeacher("刘意",30);         System.out.println(t.getName()+"---"+t.getAge());         t.teach();         System.out.println("--------------");                  //就业班老师         t = new WorkTeacher();         t.setName("林青霞");         t.setAge(27);         System.out.println(t.getName()+"---"+t.getAge());         t.teach();         System.out.println("--------------");                  t = new WorkTeacher("林青霞",27);         System.out.println(t.getName()+"---"+t.getAge());         t.teach();

问题五：
   学生案例         具体事务：基础班学员，就业班学员         共性：姓名，年龄，班级，学习，吃饭      分析：         基础班学员             成员变量：姓名，年龄，班级             成员方法：学习，吃饭         就业班学员             成员变量：姓名，年龄，班级             成员方法：学习，吃饭                      得到一个学员类。             成员变量：姓名，年龄，班级             成员方法：学习，吃饭                  实现：         学员类         基础班学员         就业班学员

        Student s = new BasicStudent();         s.setName("林青霞");         s.setAge(27);         s.setGrand("1111");         System.out.println(s.getName()+"---"+s.getAge()+"---"+s.getGrand());         s.study();         s.eat();         System.out.println("--------------");                  s = new BasicStudent("武鑫",48,"1111");         System.out.println(s.getName()+"---"+s.getAge()+"---"+s.getGrand());         s.study();         s.eat(); 
