1 简答题（写概念，思原理）
1.1 列出自己常用的JDK中的数据结构。
1.2 请说出ArrayList,Vector, LinkedList的存储性能和特性。
2 填空题（读代码、加注释）
2.1 下面的代码用于在指定位置添加注释。
1.	/*
2.	* 描述此段代码的功能：（     ）
3.	*/
4.	public class PerpetualCalendar {
5.	    private CalendarFrame view;
6.	//此句的意义何在？（）
7.	    private Calendar calendar = Calendar.getInstance();
8.	//此句的意义何在？（）
9.	    private SimpleDateFormat sdf =
10.	new SimpleDateFormat("yyyy年MM月");
11.	//此方法的意义何在？（）
12.	    public void incMonth() {
13.	        calendar.add(Calendar.MONTH, 1);
14.	        updateCalendar();
15.	    }
16.	 //此方法的意义何在？（）
17.	    public void decMonth() {
18.	        calendar.add(Calendar.MONTH, -1);
19.	        updateCalendar();
20.	    }
21.
22.	    public PerpetualCalendar() {
23.	        view = new CalendarFrame(this);
24.	        updateCalendar();
25.	    }
26.	//此方法的意义何在？（）
27.	    private void updateCalendar() {
28.	      //此句的意义何在？（）
29.	        int maxDay =
30.	 calendar.getActualMaximum(Calendar.DAY_OF_MONTH);
31.	        int currentDay = -1;
32.	     //此句的意义何在？（）
33.	        Calendar c = Calendar.getInstance();
34.	     //此if语句的意义何在？（）
35.	        if (c.get(Calendar.YEAR) == calendar.get(Calendar.YEAR)
36.	                && c.get(Calendar.MONTH) ==
37.	 calendar.get(Calendar.MONTH)) {
38.	            currentDay = c.get(Calendar.DATE);
39.	        }
40.	     //此句的意义何在？（）
41.	        c.set(calendar.get(Cal ar.get(Calendar.MONTH), 1);
42.	      //此句的意义何在？（）
43.	        int begin = c.get(Calendar.DAY_OF_WEEK);
44.	        view.setCalendar(begin, maxDay, currentDay);
45.	        view.setYearAndMonth(sdf.format(calendar.getTime()));
46.	    }
47.
48.	    public void show() {
49.	        view.setVisible(true);
50.	    }
51.
52.	    public static void main(String[] args) throws Exception {
53.	        for (LookAndFeelInfo info :
54.	 UIManager.getInstalledLookAndFeels()) {
55.	            if ("Nimbus".equals(info.getName())) {
56.	                UIManager.setLookAndFeel(info.getClassName());
57.	                break;
58.	            }
59.	        }
60.	        PerpetualCalendar calendar = new PerpetualCalendar();
61.	        calendar.show();
62.	    }
63.	}
2.2 下面的代码用于在指定位置添加注释。
1.	/*
2.	*此方法的功能何在：（     ）
3.	*/
4.	BigDecimal d1 = new BigDecimal("3.0");
5.	BigDecimal d2 = new BigDecimal("2.9");
6.	//此句的意义何在？（）
7.	BigDecimal d3 = d1.subtract(d2);
8.	System.out.println(d3);  // 0.1
9.	//此句的意义何在？（）
10.	BigDecimal d4 = d1.divide(d2, 8, BigDecimal.ROUND_HALF_UP);
11.	System.out.println(d4);  //1.03448276
2.3 下面的代码用于在指定位置添加注释。
1.	/*
2.	* 此段代码的功能何在？（     ）
3.	*/
4.	List list = new ArrayList();
5.	//此句的意义何在？（）
6.	list.add("One");
7.	list.add("Two");
8.	list.add("Three");
9.	//此句的意义何在？（）
10.	System.out.println(list.size());   //3
11.	System.out.println(list.toString());   //[One, Two, Three]
12.	//此句的意义何在？（）
13.	list.clear();
14.	//此句的意义何在？（）
15.	System.out.println(list.isEmpty());  // true
2.4 下面的代码用于在指定位置添加注释。
1.	/*
2.	* 此段代码的功能何在？（     ）
3.	*/
4.	List list = new ArrayList();
5.	list.add(new Point(1, 2)); list.add(new Point(3, 4)); list.add(new Point(5, 6));
6.	System.out.println(list);  // [(1,2), (3,4), (5,6)]
7.	Point p = new Point(1, 2);
8.	//此句的意义何在？（）
9.	if (list.contains(p)) {
10.	    //此句的意义何在？（）
11.	    list.remove(p);
12.	}
13.	System.out.println(list);  // [(3,4), (5,6)]
2.5 下面的代码用于在指定位置添加注释。
1.	/*
2.	* 此段代码的功能何在？（     ）
3.	*/
4.	List list = new ArrayList();
5.	list.add("one");
6.	list.add("two");
7.	list.add("#");
8.	list.add("three");
9.	list.add("#");
10.	//此句的意义何在？（）
11.	Iterator it = list.iterator();
12.	//此句的意义何在？（）
13.	while(it.hasNext()) {
14.	    //此句的意义何在？（）
15.	    Object obj = it.next();
16.	   //此句的意义何在？（）
17.	    if("#".equals(obj))
18.	       //此句的意义何在？（）
19.	it.remove();
20.	}
21.	System.out.println(list); // [one, two, three]
3 编程题（改代码，写代码）
3.1 根据身份证号计算年龄,完成getAgeByIDCard方法。
1.	public class AgeCalculator {
2.	    public static void main(String[] args) throws ParseException {
3.	        String str = "232301198012203421";
4.	        System.out.println(new AgeCalculator().getAgeByIDCard(str));
5.	    }
6.	    /**
7.	     * 根据省份证好计算年龄
8.	     * @param idCard 身份证号
9.	     * @return  年龄
10.	     * @throws ParseException
11.	     */
12.
13.	    public int getAgeByIDCard(String idCard) throws ParseException {
14.	    }
15.	}
3.2 实现函数public String[ ] array(List list)，其中参数list中元素类型为字符串。
